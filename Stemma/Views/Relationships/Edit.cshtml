@model Stemma.Models.Relationship

@{
    ViewBag.Title = "Edit Relationships Questions";
}

<h2>Edit Your Family & Relationships Profile</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    //you added the following line, had to change from singular to plural. only on this page, though.
    @Html.HiddenFor(model => model.RelationshipsID)

    <div class="form-horizontal">
        <h4>Answer these questions to help build your Stemma.</h4>
        <h4>Your answers will be used to direct how you curate your timeline.</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CurrentlyMarried, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @*you are experimenting*@
                    @*code out the next line (it is the default line)*@
                    @*@Html.EditorFor(model => model.CurrentlyMarried)*@
                    @*now add these two lines:*@
                    @Html.RadioButtonFor(model => model.CurrentlyMarried, "True", true) Yes
                    @Html.RadioButtonFor(model => model.CurrentlyMarried, "False", false) No
                    @Html.ValidationMessageFor(model => model.CurrentlyMarried, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InARelationship, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.InARelationship, "True", true) Yes
                    @Html.RadioButtonFor(model => model.InARelationship, "False", false) No
                    @Html.ValidationMessageFor(model => model.InARelationship, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreviousRomance, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.PreviousRomance, "True", true) Yes
                    @Html.RadioButtonFor(model => model.PreviousRomance, "False", false) No
                    @Html.ValidationMessageFor(model => model.PreviousRomance, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HaveChildren, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.HaveChildren, "True", true) Yes
                    @Html.RadioButtonFor(model => model.HaveChildren, "False", false) No
                    @Html.ValidationMessageFor(model => model.HaveChildren, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HaveGrandchildren, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.HaveGrandchildren, "True", true) Yes
                    @Html.RadioButtonFor(model => model.HaveGrandchildren, "False", false) No
                    @Html.ValidationMessageFor(model => model.HaveGrandchildren, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherYoungsters, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.OtherYoungsters, "True", true) Yes
                    @Html.RadioButtonFor(model => model.OtherYoungsters, "False", false) No
                    @Html.ValidationMessageFor(model => model.OtherYoungsters, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HaveParents, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.HaveParents, "True", true) Yes
                    @Html.RadioButtonFor(model => model.HaveParents, "False", false) No
                    @Html.ValidationMessageFor(model => model.HaveParents, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HaveGrandparents, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.HaveGrandparents, "True", true) Yes
                    @Html.RadioButtonFor(model => model.HaveGrandparents, "False", false) No
                    @Html.ValidationMessageFor(model => model.HaveGrandparents, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherAdults, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.OtherAdults, "True", true) Yes
                    @Html.RadioButtonFor(model => model.OtherAdults, "False", false) No
                    @Html.ValidationMessageFor(model => model.OtherAdults, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HaveSiblings, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.HaveSiblings, "True", true) Yes
                    @Html.RadioButtonFor(model => model.HaveSiblings, "False", false) No
                    @Html.ValidationMessageFor(model => model.HaveSiblings, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherCloseRelatives, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.OtherCloseRelatives, "True", true) Yes
                    @Html.RadioButtonFor(model => model.OtherCloseRelatives, "False", false) No
                    @Html.ValidationMessageFor(model => model.OtherCloseRelatives, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoodFriendships, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.GoodFriendships, "True", true) Yes
                    @Html.RadioButtonFor(model => model.GoodFriendships, "False", false) No
                    @Html.ValidationMessageFor(model => model.GoodFriendships, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EverythingElse, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.EverythingElse, "True", true) Yes
                    @Html.RadioButtonFor(model => model.EverythingElse, "False", false) No
                    @Html.ValidationMessageFor(model => model.EverythingElse, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-6 col-md-6">
                <input type="submit" value="Save Your Answers" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Return to Your Profile", "Create", "UserProfiles")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
