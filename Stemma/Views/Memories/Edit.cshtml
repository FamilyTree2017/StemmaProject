@model Stemma.Models.Memory

@{
    ViewBag.Title = "Edit Memories Questions";
}

<h2>Edit Your Memories & Stories Profile</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.MemoryID)

    <div class="form-horizontal">
        <h4>Answer these questions to help build your Stemma.</h4>
        <h4>Your answers will be used to direct how you curate your timeline.</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BrokenBones, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @*delete EditorFor line, replace with two RadioButtonFor lines.*@
                    @Html.RadioButtonFor(model => model.BrokenBones, "True", true) Yes
                    @Html.RadioButtonFor(model => model.BrokenBones, "False", false) No
                    @Html.ValidationMessageFor(model => model.BrokenBones, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OwnHome, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.OwnHome, "True", true) Yes
                    @Html.RadioButtonFor(model => model.OwnHome, "False", false) No
                    @Html.ValidationMessageFor(model => model.OwnHome, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DriversLicense, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.DriversLicense, "True", true) Yes
                    @Html.RadioButtonFor(model => model.DriversLicense, "False", false) No
                    @Html.ValidationMessageFor(model => model.DriversLicense, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstTooth, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.FirstTooth, "True", true) Yes
                    @Html.RadioButtonFor(model => model.FirstTooth, "False", false) No
                    @Html.ValidationMessageFor(model => model.FirstTooth, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonalNickName, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.PersonalNickName, "True", true) Yes
                    @Html.RadioButtonFor(model => model.PersonalNickName, "False", false) No
                    @Html.ValidationMessageFor(model => model.PersonalNickName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FamilyNickName, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.FamilyNickName, "True", true) Yes
                    @Html.RadioButtonFor(model => model.FamilyNickName, "False", false) No
                    @Html.ValidationMessageFor(model => model.FamilyNickName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RideBike, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.RideBike, "True", true) Yes
                    @Html.RadioButtonFor(model => model.RideBike, "False", false) No
                    @Html.ValidationMessageFor(model => model.RideBike, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CommitCrime, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.CommitCrime, "True", true) Yes
                    @Html.RadioButtonFor(model => model.CommitCrime, "False", false) No
                    @Html.ValidationMessageFor(model => model.CommitCrime, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BigMove, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.BigMove, "True", true) Yes
                    @Html.RadioButtonFor(model => model.BigMove, "False", false) No
                    @Html.ValidationMessageFor(model => model.BigMove, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vote, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.Vote, "True", true) Yes
                    @Html.RadioButtonFor(model => model.Vote, "False", false) No
                    @Html.ValidationMessageFor(model => model.Vote, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FamilyTraditions, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.FamilyTraditions, "True", true) Yes
                    @Html.RadioButtonFor(model => model.FamilyTraditions, "False", false) No
                    @Html.ValidationMessageFor(model => model.FamilyTraditions, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmbarrassingMoment, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.EmbarrassingMoment, "True", true) Yes
                    @Html.RadioButtonFor(model => model.EmbarrassingMoment, "False", false) No
                    @Html.ValidationMessageFor(model => model.EmbarrassingMoment, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProudestMoments, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.ProudestMoments, "True", true) Yes
                    @Html.RadioButtonFor(model => model.ProudestMoments, "False", false) No
                    @Html.ValidationMessageFor(model => model.ProudestMoments, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChildhoodCamp, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.ChildhoodCamp, "True", true) Yes
                    @Html.RadioButtonFor(model => model.ChildhoodCamp, "False", false) No
                    @Html.ValidationMessageFor(model => model.ChildhoodCamp, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MemorializeSomeone, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.MemorializeSomeone, "True", true) Yes
                    @Html.RadioButtonFor(model => model.MemorializeSomeone, "False", false) No
                    @Html.ValidationMessageFor(model => model.MemorializeSomeone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Concerts, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.Concerts, "True", true) Yes
                    @Html.RadioButtonFor(model => model.Concerts, "False", false) No
                    @Html.ValidationMessageFor(model => model.Concerts, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FamilyPet, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.FamilyPet, "True", true) Yes
                    @Html.RadioButtonFor(model => model.FamilyPet, "False", false) No
                    @Html.ValidationMessageFor(model => model.FamilyPet, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentPet, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.CurrentPet, "True", true) Yes
                    @Html.RadioButtonFor(model => model.CurrentPet, "False", false) No
                    @Html.ValidationMessageFor(model => model.CurrentPet, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HSDance, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.HSDance, "True", true) Yes
                    @Html.RadioButtonFor(model => model.HSDance, "False", false) No
                    @Html.ValidationMessageFor(model => model.HSDance, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnythingElse, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.RadioButtonFor(model => model.AnythingElse, "True", true) Yes
                    @Html.RadioButtonFor(model => model.AnythingElse, "False", false) No
                    @Html.ValidationMessageFor(model => model.AnythingElse, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-6 col-md-6">
                <input type="submit" value="Save Your Answers" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Return To Your Profile", "Create", "UserProfiles")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
