@model Stemma.Models.EventTable

@{
    ViewBag.Title = "Event Creation";
}
<script src="https://static.filestackapi.com/v3/filestack.js"></script>
<link href="~/Content/RegisterStyle.css" rel="stylesheet" />
<link href="~/Content/EventStyle.css" rel="stylesheet" />
<script src="~/Scripts/fileUploader.js"></script>

@*in case no one notices... the h2 is hidden under the navbar. and the h4 is still generic text.*@

    <body onload="myFinisher()">

        <div id="id01" class="modal" style="padding-top:0px;">
            @*<form class="modal-content animate">*@
@using (Html.BeginForm("Create", "EventTables", FormMethod.Post, new { @class = "modal-content animate" }))
{
    @Html.AntiForgeryToken()
                <div class="imgcontainer">
                    <span class="close" title="Home">
                        <a href="/">
                            @*<i class="fa fa-envira" style="font-size:25px; color:green;"></i>*@
                    </a>
                </span>
                <h3 style="color:forestgreen">Stemma<i class="fa fa-envira" style="font-size:25px; color:green;"></i></h3>
            </div>
            <div class="container">
                <div class="form-group">
                    @Html.LabelFor(model => model.EventTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EventTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventTitle, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EventYear, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EventYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventYear, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EventMonth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EventMonth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventMonth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EventDay, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EventDay, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventDay, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PeopleInvolved, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PeopleInvolved, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PeopleInvolved, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EventCaption, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" id="editForm">
                        @Html.EditorFor(model => model.EventCaption, new { htmlAttributes = new { @class = "form-control", @style = "height:200px" } })
                        @Html.ValidationMessageFor(model => model.EventCaption, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.UploadMedia, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.UploadMedia)
                    </div>
                    <!----This is where the Image is viewed through its ID---->
                    <div class="container-fluid">
                        <div id="itemImg" class="row text-center" >
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                    <!--filestack Button-->
                    <input class="btn btn-default" type="button" value="Upload" id="fileStack" onclick="upload()">
                </div>
            </div>
}
    </div>
</body>

<script>
    // Get the modal
    var modalForm = document.getElementById('#id01');

    function myFinisher() {
        $('#id01').fadeIn(4000);
    };
</script>

@*<hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-lg-4 form-horizontal">
                <h4>EventTable</h4>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.EventTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EventTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventTitle, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EventYear, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EventYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventYear, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EventMonth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EventMonth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventMonth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EventDay, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EventDay, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventDay, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PeopleInvolved, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PeopleInvolved, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PeopleInvolved, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*anyone know how to make this input box bigger than the rest?

                <div class="form-group">
                    @Html.LabelFor(model => model.EventCaption, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" id="editForm">
                        @Html.EditorFor(model => model.EventCaption, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventCaption, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
             <div class="col-lg-8">
                 <hr/>
                 <div class="form-group">
                    @Html.LabelFor(model => model.UploadMedia, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.UploadMedia)
                    </div>
                    <!----This is where the Image is viewed through its ID---->
                    <div class="container-fluid">
                        <div id="itemImg">
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                    <!--filestack Button-->
                    <input class="btn btn-default" type="button" value="Upload" id="fileStack" onclick="upload()">
                </div>
            </div>
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>

                <div class="text-center  col-md-offset-2 col-md-12">
                    <input class="btn btn-default" type="BUTTON" value="Upload" id="fileStack" onclick="upload()">
                </div>
            </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-4 form-horizontal">
            <h4>EventTable</h4>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.EventTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EventTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EventTitle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EventYear, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EventYear, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EventYear, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EventMonth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EventMonth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EventMonth, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
}

            <div class="form-group">
                @Html.LabelFor(model => model.EventDay, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EventDay, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EventDay, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PeopleInvolved, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PeopleInvolved, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PeopleInvolved, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*anyone know how to make this input box bigger than the rest?

                            <div class="form-group">
                                @Html.LabelFor(model => model.EventCaption, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10" id="editForm">
                                    @Html.EditorFor(model => model.EventCaption, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EventCaption, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                         <div class="col-lg-8">
                             <hr/>
                             <div class="form-group">
                                @Html.LabelFor(model => model.UploadMedia, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.HiddenFor(model => model.UploadMedia)
                                </div>
                                <!----This is where the Image is viewed through its ID---->
                                <div class="container-fluid">
                                    <div id="itemImg">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                                <!--filestack Button-->
                                <input class="btn btn-default" type="button" value="Upload" id="fileStack" onclick="upload()">
                            </div>
                        </div>
                    </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>

                            <div class="text-center  col-md-offset-2 col-md-12">
                                <input class="btn btn-default" type="BUTTON" value="Upload" id="fileStack" onclick="upload()">
                            </div>
                        </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>*@

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }

            <div id="navaay" class="navbar navbar-inverse navbar-fixed-top">
                <div class="container">
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        @Html.ActionLink("Stemma", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
                        @Html.ActionLink("Timeline", "Index", "EventTables", new { area = "" }, new { @class = "navbar-brand" })
                    </div>
                    <div class="navbar-collapse collapse">
                        <ul class="nav navbar-nav">
                            @*<li>@Html.ActionLink("Your Timeline", "Index", "EventTables")</li>*@
                            <li>@Html.ActionLink("About", "About", "Home")</li>
                            @*<li>@Html.ActionLink("FAQ", "Contact", "Home")</li>
                                <li>@Html.ActionLink("Get Started", "Contact", "Home")</li>*@
                            <li>@Html.ActionLink("You Profile", "Create", "UserProfiles")</li>
                            <li>@Html.ActionLink("Create Event", "Create", "EventTables")</li>
                        </ul>
                        @Html.Partial("_LoginPartial")
                    </div>
                </div>
            </div>
