#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Stemma
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class Stemma : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCareer(Career instance);
    partial void UpdateCareer(Career instance);
    partial void DeleteCareer(Career instance);
    partial void InsertCelebration(Celebration instance);
    partial void UpdateCelebration(Celebration instance);
    partial void DeleteCelebration(Celebration instance);
    partial void InsertEventTable(EventTable instance);
    partial void UpdateEventTable(EventTable instance);
    partial void DeleteEventTable(EventTable instance);
    partial void InsertHobbyTable(HobbyTable instance);
    partial void UpdateHobbyTable(HobbyTable instance);
    partial void DeleteHobbyTable(HobbyTable instance);
    partial void InsertMedia(Media instance);
    partial void UpdateMedia(Media instance);
    partial void DeleteMedia(Media instance);
    partial void InsertMemories(Memories instance);
    partial void UpdateMemories(Memories instance);
    partial void DeleteMemories(Memories instance);
    partial void InsertRegisterUser(RegisterUser instance);
    partial void UpdateRegisterUser(RegisterUser instance);
    partial void DeleteRegisterUser(RegisterUser instance);
    partial void InsertRelationship(Relationship instance);
    partial void UpdateRelationship(Relationship instance);
    partial void DeleteRelationship(Relationship instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void InsertWorldEvents(WorldEvents instance);
    partial void UpdateWorldEvents(WorldEvents instance);
    partial void DeleteWorldEvents(WorldEvents instance);
    #endregion
		
		public Stemma(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Stemma(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Stemma(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Stemma(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Career> Career
		{
			get
			{
				return this.GetTable<Career>();
			}
		}
		
		public System.Data.Linq.Table<Celebration> Celebration
		{
			get
			{
				return this.GetTable<Celebration>();
			}
		}
		
		public System.Data.Linq.Table<EventTable> EventTable
		{
			get
			{
				return this.GetTable<EventTable>();
			}
		}
		
		public System.Data.Linq.Table<HobbyTable> HobbyTable
		{
			get
			{
				return this.GetTable<HobbyTable>();
			}
		}
		
		public System.Data.Linq.Table<Media> Media
		{
			get
			{
				return this.GetTable<Media>();
			}
		}
		
		public System.Data.Linq.Table<Memories> Memories
		{
			get
			{
				return this.GetTable<Memories>();
			}
		}
		
		public System.Data.Linq.Table<RegisterUser> RegisterUser
		{
			get
			{
				return this.GetTable<RegisterUser>();
			}
		}
		
		public System.Data.Linq.Table<Relationship> Relationship
		{
			get
			{
				return this.GetTable<Relationship>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfile
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<WorldEvents> WorldEvents
		{
			get
			{
				return this.GetTable<WorldEvents>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Career")]
	public partial class Career : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CareerID;
		
		private System.Nullable<bool> _AttendedCollege;
		
		private System.Nullable<bool> _Graduations;
		
		private System.Nullable<bool> _HaveJob;
		
		private System.Nullable<bool> _HadJob;
		
		private System.Nullable<bool> _Accomplishments;
		
		private System.Nullable<bool> _FirstDayOfSchool;
		
		private System.Nullable<bool> _ArmedForces;
		
		private System.Nullable<bool> _Volunteer;
		
		private System.Nullable<bool> _Legacies;
		
		private System.Nullable<bool> _TechSchool;
		
		private System.Nullable<bool> _LicensesCertifications;
		
		private System.Nullable<bool> _FirstJob;
		
		private System.Nullable<bool> _WorstJob;
		
		private System.Nullable<bool> _AnythingElse;
		
		private EntitySet<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCareerIDChanging(int value);
    partial void OnCareerIDChanged();
    partial void OnAttendedCollegeChanging(System.Nullable<bool> value);
    partial void OnAttendedCollegeChanged();
    partial void OnGraduationsChanging(System.Nullable<bool> value);
    partial void OnGraduationsChanged();
    partial void OnHaveJobChanging(System.Nullable<bool> value);
    partial void OnHaveJobChanged();
    partial void OnHadJobChanging(System.Nullable<bool> value);
    partial void OnHadJobChanged();
    partial void OnAccomplishmentsChanging(System.Nullable<bool> value);
    partial void OnAccomplishmentsChanged();
    partial void OnFirstDayOfSchoolChanging(System.Nullable<bool> value);
    partial void OnFirstDayOfSchoolChanged();
    partial void OnArmedForcesChanging(System.Nullable<bool> value);
    partial void OnArmedForcesChanged();
    partial void OnVolunteerChanging(System.Nullable<bool> value);
    partial void OnVolunteerChanged();
    partial void OnLegaciesChanging(System.Nullable<bool> value);
    partial void OnLegaciesChanged();
    partial void OnTechSchoolChanging(System.Nullable<bool> value);
    partial void OnTechSchoolChanged();
    partial void OnLicensesCertificationsChanging(System.Nullable<bool> value);
    partial void OnLicensesCertificationsChanged();
    partial void OnFirstJobChanging(System.Nullable<bool> value);
    partial void OnFirstJobChanged();
    partial void OnWorstJobChanging(System.Nullable<bool> value);
    partial void OnWorstJobChanged();
    partial void OnAnythingElseChanging(System.Nullable<bool> value);
    partial void OnAnythingElseChanged();
    #endregion
		
		public Career()
		{
			this._UserProfile = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile), new Action<UserProfile>(this.detach_UserProfile));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CareerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CareerID
		{
			get
			{
				return this._CareerID;
			}
			set
			{
				if ((this._CareerID != value))
				{
					this.OnCareerIDChanging(value);
					this.SendPropertyChanging();
					this._CareerID = value;
					this.SendPropertyChanged("CareerID");
					this.OnCareerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendedCollege", DbType="Bit")]
		public System.Nullable<bool> AttendedCollege
		{
			get
			{
				return this._AttendedCollege;
			}
			set
			{
				if ((this._AttendedCollege != value))
				{
					this.OnAttendedCollegeChanging(value);
					this.SendPropertyChanging();
					this._AttendedCollege = value;
					this.SendPropertyChanged("AttendedCollege");
					this.OnAttendedCollegeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Graduations", DbType="Bit")]
		public System.Nullable<bool> Graduations
		{
			get
			{
				return this._Graduations;
			}
			set
			{
				if ((this._Graduations != value))
				{
					this.OnGraduationsChanging(value);
					this.SendPropertyChanging();
					this._Graduations = value;
					this.SendPropertyChanged("Graduations");
					this.OnGraduationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaveJob", DbType="Bit")]
		public System.Nullable<bool> HaveJob
		{
			get
			{
				return this._HaveJob;
			}
			set
			{
				if ((this._HaveJob != value))
				{
					this.OnHaveJobChanging(value);
					this.SendPropertyChanging();
					this._HaveJob = value;
					this.SendPropertyChanged("HaveJob");
					this.OnHaveJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HadJob", DbType="Bit")]
		public System.Nullable<bool> HadJob
		{
			get
			{
				return this._HadJob;
			}
			set
			{
				if ((this._HadJob != value))
				{
					this.OnHadJobChanging(value);
					this.SendPropertyChanging();
					this._HadJob = value;
					this.SendPropertyChanged("HadJob");
					this.OnHadJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accomplishments", DbType="Bit")]
		public System.Nullable<bool> Accomplishments
		{
			get
			{
				return this._Accomplishments;
			}
			set
			{
				if ((this._Accomplishments != value))
				{
					this.OnAccomplishmentsChanging(value);
					this.SendPropertyChanging();
					this._Accomplishments = value;
					this.SendPropertyChanged("Accomplishments");
					this.OnAccomplishmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDayOfSchool", DbType="Bit")]
		public System.Nullable<bool> FirstDayOfSchool
		{
			get
			{
				return this._FirstDayOfSchool;
			}
			set
			{
				if ((this._FirstDayOfSchool != value))
				{
					this.OnFirstDayOfSchoolChanging(value);
					this.SendPropertyChanging();
					this._FirstDayOfSchool = value;
					this.SendPropertyChanged("FirstDayOfSchool");
					this.OnFirstDayOfSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArmedForces", DbType="Bit")]
		public System.Nullable<bool> ArmedForces
		{
			get
			{
				return this._ArmedForces;
			}
			set
			{
				if ((this._ArmedForces != value))
				{
					this.OnArmedForcesChanging(value);
					this.SendPropertyChanging();
					this._ArmedForces = value;
					this.SendPropertyChanged("ArmedForces");
					this.OnArmedForcesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volunteer", DbType="Bit")]
		public System.Nullable<bool> Volunteer
		{
			get
			{
				return this._Volunteer;
			}
			set
			{
				if ((this._Volunteer != value))
				{
					this.OnVolunteerChanging(value);
					this.SendPropertyChanging();
					this._Volunteer = value;
					this.SendPropertyChanged("Volunteer");
					this.OnVolunteerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Legacies", DbType="Bit")]
		public System.Nullable<bool> Legacies
		{
			get
			{
				return this._Legacies;
			}
			set
			{
				if ((this._Legacies != value))
				{
					this.OnLegaciesChanging(value);
					this.SendPropertyChanging();
					this._Legacies = value;
					this.SendPropertyChanged("Legacies");
					this.OnLegaciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechSchool", DbType="Bit")]
		public System.Nullable<bool> TechSchool
		{
			get
			{
				return this._TechSchool;
			}
			set
			{
				if ((this._TechSchool != value))
				{
					this.OnTechSchoolChanging(value);
					this.SendPropertyChanging();
					this._TechSchool = value;
					this.SendPropertyChanged("TechSchool");
					this.OnTechSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicensesCertifications", DbType="Bit")]
		public System.Nullable<bool> LicensesCertifications
		{
			get
			{
				return this._LicensesCertifications;
			}
			set
			{
				if ((this._LicensesCertifications != value))
				{
					this.OnLicensesCertificationsChanging(value);
					this.SendPropertyChanging();
					this._LicensesCertifications = value;
					this.SendPropertyChanged("LicensesCertifications");
					this.OnLicensesCertificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstJob", DbType="Bit")]
		public System.Nullable<bool> FirstJob
		{
			get
			{
				return this._FirstJob;
			}
			set
			{
				if ((this._FirstJob != value))
				{
					this.OnFirstJobChanging(value);
					this.SendPropertyChanging();
					this._FirstJob = value;
					this.SendPropertyChanged("FirstJob");
					this.OnFirstJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorstJob", DbType="Bit")]
		public System.Nullable<bool> WorstJob
		{
			get
			{
				return this._WorstJob;
			}
			set
			{
				if ((this._WorstJob != value))
				{
					this.OnWorstJobChanging(value);
					this.SendPropertyChanging();
					this._WorstJob = value;
					this.SendPropertyChanged("WorstJob");
					this.OnWorstJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnythingElse", DbType="Bit")]
		public System.Nullable<bool> AnythingElse
		{
			get
			{
				return this._AnythingElse;
			}
			set
			{
				if ((this._AnythingElse != value))
				{
					this.OnAnythingElseChanging(value);
					this.SendPropertyChanging();
					this._AnythingElse = value;
					this.SendPropertyChanged("AnythingElse");
					this.OnAnythingElseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_Career", Storage="_UserProfile", ThisKey="CareerID", OtherKey="CareerID", DeleteRule="NO ACTION")]
		public EntitySet<UserProfile> UserProfile
		{
			get
			{
				return this._UserProfile;
			}
			set
			{
				this._UserProfile.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Career = this;
		}
		
		private void detach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Career = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Celebration")]
	public partial class Celebration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CelebrationID;
		
		private System.Nullable<bool> _HolidayRecently;
		
		private System.Nullable<bool> _PartyRecently;
		
		private System.Nullable<bool> _MilestoneRecently;
		
		private System.Nullable<bool> _CelebrateChristmas;
		
		private System.Nullable<bool> _CelebrateNYE;
		
		private System.Nullable<bool> _CelebrateThanksgiving;
		
		private System.Nullable<bool> _CelebrateValentine;
		
		private System.Nullable<bool> _CelebrateEaster;
		
		private System.Nullable<bool> _CelebrateIndependenceDay;
		
		private System.Nullable<bool> _CelebrateHalloween;
		
		private System.Nullable<bool> _CelebrateMemorialDay;
		
		private System.Nullable<bool> _CelebrateLaborDay;
		
		private System.Nullable<bool> _CelebrateMothersDay;
		
		private System.Nullable<bool> _CelebrateFathersDay;
		
		private System.Nullable<bool> _CelebrateChaunakah;
		
		private System.Nullable<bool> _CelebratePassover;
		
		private System.Nullable<bool> _CelebrateRoshHashanah;
		
		private System.Nullable<bool> _CelerateYomKippur;
		
		private System.Nullable<bool> _CelebrateRamadan;
		
		private System.Nullable<bool> _CelebrateEID;
		
		private System.Nullable<bool> _CelebrateSTPat;
		
		private System.Nullable<bool> _CelebrateBirthdays;
		
		private System.Nullable<bool> _CelebrateChineseNewYear;
		
		private System.Nullable<bool> _CelebrateQuinceanera;
		
		private System.Nullable<bool> _CelebrateBarBatMitzvah;
		
		private System.Nullable<bool> _CelebrateDayOfTheDead;
		
		private System.Nullable<bool> _CelebrateVeteransDay;
		
		private System.Nullable<bool> _CelebrateCincoDeMayo;
		
		private System.Nullable<bool> _AnythingElse;
		
		private EntitySet<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCelebrationIDChanging(int value);
    partial void OnCelebrationIDChanged();
    partial void OnHolidayRecentlyChanging(System.Nullable<bool> value);
    partial void OnHolidayRecentlyChanged();
    partial void OnPartyRecentlyChanging(System.Nullable<bool> value);
    partial void OnPartyRecentlyChanged();
    partial void OnMilestoneRecentlyChanging(System.Nullable<bool> value);
    partial void OnMilestoneRecentlyChanged();
    partial void OnCelebrateChristmasChanging(System.Nullable<bool> value);
    partial void OnCelebrateChristmasChanged();
    partial void OnCelebrateNYEChanging(System.Nullable<bool> value);
    partial void OnCelebrateNYEChanged();
    partial void OnCelebrateThanksgivingChanging(System.Nullable<bool> value);
    partial void OnCelebrateThanksgivingChanged();
    partial void OnCelebrateValentineChanging(System.Nullable<bool> value);
    partial void OnCelebrateValentineChanged();
    partial void OnCelebrateEasterChanging(System.Nullable<bool> value);
    partial void OnCelebrateEasterChanged();
    partial void OnCelebrateIndependenceDayChanging(System.Nullable<bool> value);
    partial void OnCelebrateIndependenceDayChanged();
    partial void OnCelebrateHalloweenChanging(System.Nullable<bool> value);
    partial void OnCelebrateHalloweenChanged();
    partial void OnCelebrateMemorialDayChanging(System.Nullable<bool> value);
    partial void OnCelebrateMemorialDayChanged();
    partial void OnCelebrateLaborDayChanging(System.Nullable<bool> value);
    partial void OnCelebrateLaborDayChanged();
    partial void OnCelebrateMothersDayChanging(System.Nullable<bool> value);
    partial void OnCelebrateMothersDayChanged();
    partial void OnCelebrateFathersDayChanging(System.Nullable<bool> value);
    partial void OnCelebrateFathersDayChanged();
    partial void OnCelebrateChaunakahChanging(System.Nullable<bool> value);
    partial void OnCelebrateChaunakahChanged();
    partial void OnCelebratePassoverChanging(System.Nullable<bool> value);
    partial void OnCelebratePassoverChanged();
    partial void OnCelebrateRoshHashanahChanging(System.Nullable<bool> value);
    partial void OnCelebrateRoshHashanahChanged();
    partial void OnCelerateYomKippurChanging(System.Nullable<bool> value);
    partial void OnCelerateYomKippurChanged();
    partial void OnCelebrateRamadanChanging(System.Nullable<bool> value);
    partial void OnCelebrateRamadanChanged();
    partial void OnCelebrateEIDChanging(System.Nullable<bool> value);
    partial void OnCelebrateEIDChanged();
    partial void OnCelebrateSTPatChanging(System.Nullable<bool> value);
    partial void OnCelebrateSTPatChanged();
    partial void OnCelebrateBirthdaysChanging(System.Nullable<bool> value);
    partial void OnCelebrateBirthdaysChanged();
    partial void OnCelebrateChineseNewYearChanging(System.Nullable<bool> value);
    partial void OnCelebrateChineseNewYearChanged();
    partial void OnCelebrateQuinceaneraChanging(System.Nullable<bool> value);
    partial void OnCelebrateQuinceaneraChanged();
    partial void OnCelebrateBarBatMitzvahChanging(System.Nullable<bool> value);
    partial void OnCelebrateBarBatMitzvahChanged();
    partial void OnCelebrateDayOfTheDeadChanging(System.Nullable<bool> value);
    partial void OnCelebrateDayOfTheDeadChanged();
    partial void OnCelebrateVeteransDayChanging(System.Nullable<bool> value);
    partial void OnCelebrateVeteransDayChanged();
    partial void OnCelebrateCincoDeMayoChanging(System.Nullable<bool> value);
    partial void OnCelebrateCincoDeMayoChanged();
    partial void OnAnythingElseChanging(System.Nullable<bool> value);
    partial void OnAnythingElseChanged();
    #endregion
		
		public Celebration()
		{
			this._UserProfile = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile), new Action<UserProfile>(this.detach_UserProfile));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CelebrationID
		{
			get
			{
				return this._CelebrationID;
			}
			set
			{
				if ((this._CelebrationID != value))
				{
					this.OnCelebrationIDChanging(value);
					this.SendPropertyChanging();
					this._CelebrationID = value;
					this.SendPropertyChanged("CelebrationID");
					this.OnCelebrationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayRecently", DbType="Bit")]
		public System.Nullable<bool> HolidayRecently
		{
			get
			{
				return this._HolidayRecently;
			}
			set
			{
				if ((this._HolidayRecently != value))
				{
					this.OnHolidayRecentlyChanging(value);
					this.SendPropertyChanging();
					this._HolidayRecently = value;
					this.SendPropertyChanged("HolidayRecently");
					this.OnHolidayRecentlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartyRecently", DbType="Bit")]
		public System.Nullable<bool> PartyRecently
		{
			get
			{
				return this._PartyRecently;
			}
			set
			{
				if ((this._PartyRecently != value))
				{
					this.OnPartyRecentlyChanging(value);
					this.SendPropertyChanging();
					this._PartyRecently = value;
					this.SendPropertyChanged("PartyRecently");
					this.OnPartyRecentlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilestoneRecently", DbType="Bit")]
		public System.Nullable<bool> MilestoneRecently
		{
			get
			{
				return this._MilestoneRecently;
			}
			set
			{
				if ((this._MilestoneRecently != value))
				{
					this.OnMilestoneRecentlyChanging(value);
					this.SendPropertyChanging();
					this._MilestoneRecently = value;
					this.SendPropertyChanged("MilestoneRecently");
					this.OnMilestoneRecentlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateChristmas", DbType="Bit")]
		public System.Nullable<bool> CelebrateChristmas
		{
			get
			{
				return this._CelebrateChristmas;
			}
			set
			{
				if ((this._CelebrateChristmas != value))
				{
					this.OnCelebrateChristmasChanging(value);
					this.SendPropertyChanging();
					this._CelebrateChristmas = value;
					this.SendPropertyChanged("CelebrateChristmas");
					this.OnCelebrateChristmasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateNYE", DbType="Bit")]
		public System.Nullable<bool> CelebrateNYE
		{
			get
			{
				return this._CelebrateNYE;
			}
			set
			{
				if ((this._CelebrateNYE != value))
				{
					this.OnCelebrateNYEChanging(value);
					this.SendPropertyChanging();
					this._CelebrateNYE = value;
					this.SendPropertyChanged("CelebrateNYE");
					this.OnCelebrateNYEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateThanksgiving", DbType="Bit")]
		public System.Nullable<bool> CelebrateThanksgiving
		{
			get
			{
				return this._CelebrateThanksgiving;
			}
			set
			{
				if ((this._CelebrateThanksgiving != value))
				{
					this.OnCelebrateThanksgivingChanging(value);
					this.SendPropertyChanging();
					this._CelebrateThanksgiving = value;
					this.SendPropertyChanged("CelebrateThanksgiving");
					this.OnCelebrateThanksgivingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateValentine", DbType="Bit")]
		public System.Nullable<bool> CelebrateValentine
		{
			get
			{
				return this._CelebrateValentine;
			}
			set
			{
				if ((this._CelebrateValentine != value))
				{
					this.OnCelebrateValentineChanging(value);
					this.SendPropertyChanging();
					this._CelebrateValentine = value;
					this.SendPropertyChanged("CelebrateValentine");
					this.OnCelebrateValentineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateEaster", DbType="Bit")]
		public System.Nullable<bool> CelebrateEaster
		{
			get
			{
				return this._CelebrateEaster;
			}
			set
			{
				if ((this._CelebrateEaster != value))
				{
					this.OnCelebrateEasterChanging(value);
					this.SendPropertyChanging();
					this._CelebrateEaster = value;
					this.SendPropertyChanged("CelebrateEaster");
					this.OnCelebrateEasterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateIndependenceDay", DbType="Bit")]
		public System.Nullable<bool> CelebrateIndependenceDay
		{
			get
			{
				return this._CelebrateIndependenceDay;
			}
			set
			{
				if ((this._CelebrateIndependenceDay != value))
				{
					this.OnCelebrateIndependenceDayChanging(value);
					this.SendPropertyChanging();
					this._CelebrateIndependenceDay = value;
					this.SendPropertyChanged("CelebrateIndependenceDay");
					this.OnCelebrateIndependenceDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateHalloween", DbType="Bit")]
		public System.Nullable<bool> CelebrateHalloween
		{
			get
			{
				return this._CelebrateHalloween;
			}
			set
			{
				if ((this._CelebrateHalloween != value))
				{
					this.OnCelebrateHalloweenChanging(value);
					this.SendPropertyChanging();
					this._CelebrateHalloween = value;
					this.SendPropertyChanged("CelebrateHalloween");
					this.OnCelebrateHalloweenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateMemorialDay", DbType="Bit")]
		public System.Nullable<bool> CelebrateMemorialDay
		{
			get
			{
				return this._CelebrateMemorialDay;
			}
			set
			{
				if ((this._CelebrateMemorialDay != value))
				{
					this.OnCelebrateMemorialDayChanging(value);
					this.SendPropertyChanging();
					this._CelebrateMemorialDay = value;
					this.SendPropertyChanged("CelebrateMemorialDay");
					this.OnCelebrateMemorialDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateLaborDay", DbType="Bit")]
		public System.Nullable<bool> CelebrateLaborDay
		{
			get
			{
				return this._CelebrateLaborDay;
			}
			set
			{
				if ((this._CelebrateLaborDay != value))
				{
					this.OnCelebrateLaborDayChanging(value);
					this.SendPropertyChanging();
					this._CelebrateLaborDay = value;
					this.SendPropertyChanged("CelebrateLaborDay");
					this.OnCelebrateLaborDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateMothersDay", DbType="Bit")]
		public System.Nullable<bool> CelebrateMothersDay
		{
			get
			{
				return this._CelebrateMothersDay;
			}
			set
			{
				if ((this._CelebrateMothersDay != value))
				{
					this.OnCelebrateMothersDayChanging(value);
					this.SendPropertyChanging();
					this._CelebrateMothersDay = value;
					this.SendPropertyChanged("CelebrateMothersDay");
					this.OnCelebrateMothersDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateFathersDay", DbType="Bit")]
		public System.Nullable<bool> CelebrateFathersDay
		{
			get
			{
				return this._CelebrateFathersDay;
			}
			set
			{
				if ((this._CelebrateFathersDay != value))
				{
					this.OnCelebrateFathersDayChanging(value);
					this.SendPropertyChanging();
					this._CelebrateFathersDay = value;
					this.SendPropertyChanged("CelebrateFathersDay");
					this.OnCelebrateFathersDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateChaunakah", DbType="Bit")]
		public System.Nullable<bool> CelebrateChaunakah
		{
			get
			{
				return this._CelebrateChaunakah;
			}
			set
			{
				if ((this._CelebrateChaunakah != value))
				{
					this.OnCelebrateChaunakahChanging(value);
					this.SendPropertyChanging();
					this._CelebrateChaunakah = value;
					this.SendPropertyChanged("CelebrateChaunakah");
					this.OnCelebrateChaunakahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebratePassover", DbType="Bit")]
		public System.Nullable<bool> CelebratePassover
		{
			get
			{
				return this._CelebratePassover;
			}
			set
			{
				if ((this._CelebratePassover != value))
				{
					this.OnCelebratePassoverChanging(value);
					this.SendPropertyChanging();
					this._CelebratePassover = value;
					this.SendPropertyChanged("CelebratePassover");
					this.OnCelebratePassoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateRoshHashanah", DbType="Bit")]
		public System.Nullable<bool> CelebrateRoshHashanah
		{
			get
			{
				return this._CelebrateRoshHashanah;
			}
			set
			{
				if ((this._CelebrateRoshHashanah != value))
				{
					this.OnCelebrateRoshHashanahChanging(value);
					this.SendPropertyChanging();
					this._CelebrateRoshHashanah = value;
					this.SendPropertyChanged("CelebrateRoshHashanah");
					this.OnCelebrateRoshHashanahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelerateYomKippur", DbType="Bit")]
		public System.Nullable<bool> CelerateYomKippur
		{
			get
			{
				return this._CelerateYomKippur;
			}
			set
			{
				if ((this._CelerateYomKippur != value))
				{
					this.OnCelerateYomKippurChanging(value);
					this.SendPropertyChanging();
					this._CelerateYomKippur = value;
					this.SendPropertyChanged("CelerateYomKippur");
					this.OnCelerateYomKippurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateRamadan", DbType="Bit")]
		public System.Nullable<bool> CelebrateRamadan
		{
			get
			{
				return this._CelebrateRamadan;
			}
			set
			{
				if ((this._CelebrateRamadan != value))
				{
					this.OnCelebrateRamadanChanging(value);
					this.SendPropertyChanging();
					this._CelebrateRamadan = value;
					this.SendPropertyChanged("CelebrateRamadan");
					this.OnCelebrateRamadanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateEID", DbType="Bit")]
		public System.Nullable<bool> CelebrateEID
		{
			get
			{
				return this._CelebrateEID;
			}
			set
			{
				if ((this._CelebrateEID != value))
				{
					this.OnCelebrateEIDChanging(value);
					this.SendPropertyChanging();
					this._CelebrateEID = value;
					this.SendPropertyChanged("CelebrateEID");
					this.OnCelebrateEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateSTPat", DbType="Bit")]
		public System.Nullable<bool> CelebrateSTPat
		{
			get
			{
				return this._CelebrateSTPat;
			}
			set
			{
				if ((this._CelebrateSTPat != value))
				{
					this.OnCelebrateSTPatChanging(value);
					this.SendPropertyChanging();
					this._CelebrateSTPat = value;
					this.SendPropertyChanged("CelebrateSTPat");
					this.OnCelebrateSTPatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateBirthdays", DbType="Bit")]
		public System.Nullable<bool> CelebrateBirthdays
		{
			get
			{
				return this._CelebrateBirthdays;
			}
			set
			{
				if ((this._CelebrateBirthdays != value))
				{
					this.OnCelebrateBirthdaysChanging(value);
					this.SendPropertyChanging();
					this._CelebrateBirthdays = value;
					this.SendPropertyChanged("CelebrateBirthdays");
					this.OnCelebrateBirthdaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateChineseNewYear", DbType="Bit")]
		public System.Nullable<bool> CelebrateChineseNewYear
		{
			get
			{
				return this._CelebrateChineseNewYear;
			}
			set
			{
				if ((this._CelebrateChineseNewYear != value))
				{
					this.OnCelebrateChineseNewYearChanging(value);
					this.SendPropertyChanging();
					this._CelebrateChineseNewYear = value;
					this.SendPropertyChanged("CelebrateChineseNewYear");
					this.OnCelebrateChineseNewYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateQuinceanera", DbType="Bit")]
		public System.Nullable<bool> CelebrateQuinceanera
		{
			get
			{
				return this._CelebrateQuinceanera;
			}
			set
			{
				if ((this._CelebrateQuinceanera != value))
				{
					this.OnCelebrateQuinceaneraChanging(value);
					this.SendPropertyChanging();
					this._CelebrateQuinceanera = value;
					this.SendPropertyChanged("CelebrateQuinceanera");
					this.OnCelebrateQuinceaneraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateBarBatMitzvah", DbType="Bit")]
		public System.Nullable<bool> CelebrateBarBatMitzvah
		{
			get
			{
				return this._CelebrateBarBatMitzvah;
			}
			set
			{
				if ((this._CelebrateBarBatMitzvah != value))
				{
					this.OnCelebrateBarBatMitzvahChanging(value);
					this.SendPropertyChanging();
					this._CelebrateBarBatMitzvah = value;
					this.SendPropertyChanged("CelebrateBarBatMitzvah");
					this.OnCelebrateBarBatMitzvahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateDayOfTheDead", DbType="Bit")]
		public System.Nullable<bool> CelebrateDayOfTheDead
		{
			get
			{
				return this._CelebrateDayOfTheDead;
			}
			set
			{
				if ((this._CelebrateDayOfTheDead != value))
				{
					this.OnCelebrateDayOfTheDeadChanging(value);
					this.SendPropertyChanging();
					this._CelebrateDayOfTheDead = value;
					this.SendPropertyChanged("CelebrateDayOfTheDead");
					this.OnCelebrateDayOfTheDeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateVeteransDay", DbType="Bit")]
		public System.Nullable<bool> CelebrateVeteransDay
		{
			get
			{
				return this._CelebrateVeteransDay;
			}
			set
			{
				if ((this._CelebrateVeteransDay != value))
				{
					this.OnCelebrateVeteransDayChanging(value);
					this.SendPropertyChanging();
					this._CelebrateVeteransDay = value;
					this.SendPropertyChanged("CelebrateVeteransDay");
					this.OnCelebrateVeteransDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrateCincoDeMayo", DbType="Bit")]
		public System.Nullable<bool> CelebrateCincoDeMayo
		{
			get
			{
				return this._CelebrateCincoDeMayo;
			}
			set
			{
				if ((this._CelebrateCincoDeMayo != value))
				{
					this.OnCelebrateCincoDeMayoChanging(value);
					this.SendPropertyChanging();
					this._CelebrateCincoDeMayo = value;
					this.SendPropertyChanged("CelebrateCincoDeMayo");
					this.OnCelebrateCincoDeMayoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnythingElse", DbType="Bit")]
		public System.Nullable<bool> AnythingElse
		{
			get
			{
				return this._AnythingElse;
			}
			set
			{
				if ((this._AnythingElse != value))
				{
					this.OnAnythingElseChanging(value);
					this.SendPropertyChanging();
					this._AnythingElse = value;
					this.SendPropertyChanged("AnythingElse");
					this.OnAnythingElseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_Celebration", Storage="_UserProfile", ThisKey="CelebrationID", OtherKey="CelebrationID", DeleteRule="NO ACTION")]
		public EntitySet<UserProfile> UserProfile
		{
			get
			{
				return this._UserProfile;
			}
			set
			{
				this._UserProfile.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Celebration = this;
		}
		
		private void detach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Celebration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventTable")]
	public partial class EventTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private System.Data.Linq.Binary _DateCreated;
		
		private string _EventTitle;
		
		private System.Nullable<int> _EventDay;
		
		private string _EventMonth;
		
		private int _EventYear;
		
		private string _PeopleInvolved;
		
		private string _EventCaption;
		
		private EntitySet<Media> _Media;
		
		private EntitySet<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnDateCreatedChanging(System.Data.Linq.Binary value);
    partial void OnDateCreatedChanged();
    partial void OnEventTitleChanging(string value);
    partial void OnEventTitleChanged();
    partial void OnEventDayChanging(System.Nullable<int> value);
    partial void OnEventDayChanged();
    partial void OnEventMonthChanging(string value);
    partial void OnEventMonthChanged();
    partial void OnEventYearChanging(int value);
    partial void OnEventYearChanged();
    partial void OnPeopleInvolvedChanging(string value);
    partial void OnPeopleInvolvedChanged();
    partial void OnEventCaptionChanging(string value);
    partial void OnEventCaptionChanged();
    #endregion
		
		public EventTable()
		{
			this._Media = new EntitySet<Media>(new Action<Media>(this.attach_Media), new Action<Media>(this.detach_Media));
			this._UserProfile = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile), new Action<UserProfile>(this.detach_UserProfile));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EventTitle
		{
			get
			{
				return this._EventTitle;
			}
			set
			{
				if ((this._EventTitle != value))
				{
					this.OnEventTitleChanging(value);
					this.SendPropertyChanging();
					this._EventTitle = value;
					this.SendPropertyChanged("EventTitle");
					this.OnEventTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDay", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EventDay
		{
			get
			{
				return this._EventDay;
			}
			set
			{
				if ((this._EventDay != value))
				{
					this.OnEventDayChanging(value);
					this.SendPropertyChanging();
					this._EventDay = value;
					this.SendPropertyChanged("EventDay");
					this.OnEventDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventMonth", DbType="NVarChar(12)", UpdateCheck=UpdateCheck.Never)]
		public string EventMonth
		{
			get
			{
				return this._EventMonth;
			}
			set
			{
				if ((this._EventMonth != value))
				{
					this.OnEventMonthChanging(value);
					this.SendPropertyChanging();
					this._EventMonth = value;
					this.SendPropertyChanged("EventMonth");
					this.OnEventMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventYear", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int EventYear
		{
			get
			{
				return this._EventYear;
			}
			set
			{
				if ((this._EventYear != value))
				{
					this.OnEventYearChanging(value);
					this.SendPropertyChanging();
					this._EventYear = value;
					this.SendPropertyChanged("EventYear");
					this.OnEventYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeopleInvolved", DbType="NVarChar(300)", UpdateCheck=UpdateCheck.Never)]
		public string PeopleInvolved
		{
			get
			{
				return this._PeopleInvolved;
			}
			set
			{
				if ((this._PeopleInvolved != value))
				{
					this.OnPeopleInvolvedChanging(value);
					this.SendPropertyChanging();
					this._PeopleInvolved = value;
					this.SendPropertyChanged("PeopleInvolved");
					this.OnPeopleInvolvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCaption", DbType="NVarChar(750)", UpdateCheck=UpdateCheck.Never)]
		public string EventCaption
		{
			get
			{
				return this._EventCaption;
			}
			set
			{
				if ((this._EventCaption != value))
				{
					this.OnEventCaptionChanging(value);
					this.SendPropertyChanging();
					this._EventCaption = value;
					this.SendPropertyChanged("EventCaption");
					this.OnEventCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Media_EventTable", Storage="_Media", ThisKey="EventID", OtherKey="EventID", DeleteRule="NO ACTION")]
		public EntitySet<Media> Media
		{
			get
			{
				return this._Media;
			}
			set
			{
				this._Media.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_EventTable", Storage="_UserProfile", ThisKey="EventID", OtherKey="EventID", DeleteRule="NO ACTION")]
		public EntitySet<UserProfile> UserProfile
		{
			get
			{
				return this._UserProfile;
			}
			set
			{
				this._UserProfile.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Media(Media entity)
		{
			this.SendPropertyChanging();
			entity.EventTable = this;
		}
		
		private void detach_Media(Media entity)
		{
			this.SendPropertyChanging();
			entity.EventTable = null;
		}
		
		private void attach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.EventTable = this;
		}
		
		private void detach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.EventTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HobbyTable")]
	public partial class HobbyTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HobbyID;
		
		private System.Nullable<bool> _PlaySports;
		
		private System.Nullable<bool> _InAShow;
		
		private System.Nullable<bool> _Travel;
		
		private System.Nullable<bool> _OutdoorPerson;
		
		private System.Nullable<bool> _TravelAbroad;
		
		private System.Nullable<bool> _Passions;
		
		private System.Nullable<bool> _Talents;
		
		private System.Nullable<bool> _Trophies;
		
		private System.Nullable<bool> _Exercise;
		
		private System.Nullable<bool> _FamilyVacation;
		
		private System.Nullable<bool> _ChildhoodVacation;
		
		private System.Nullable<bool> _AnythingElse;
		
		private EntitySet<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHobbyIDChanging(int value);
    partial void OnHobbyIDChanged();
    partial void OnPlaySportsChanging(System.Nullable<bool> value);
    partial void OnPlaySportsChanged();
    partial void OnInAShowChanging(System.Nullable<bool> value);
    partial void OnInAShowChanged();
    partial void OnTravelChanging(System.Nullable<bool> value);
    partial void OnTravelChanged();
    partial void OnOutdoorPersonChanging(System.Nullable<bool> value);
    partial void OnOutdoorPersonChanged();
    partial void OnTravelAbroadChanging(System.Nullable<bool> value);
    partial void OnTravelAbroadChanged();
    partial void OnPassionsChanging(System.Nullable<bool> value);
    partial void OnPassionsChanged();
    partial void OnTalentsChanging(System.Nullable<bool> value);
    partial void OnTalentsChanged();
    partial void OnTrophiesChanging(System.Nullable<bool> value);
    partial void OnTrophiesChanged();
    partial void OnExerciseChanging(System.Nullable<bool> value);
    partial void OnExerciseChanged();
    partial void OnFamilyVacationChanging(System.Nullable<bool> value);
    partial void OnFamilyVacationChanged();
    partial void OnChildhoodVacationChanging(System.Nullable<bool> value);
    partial void OnChildhoodVacationChanged();
    partial void OnAnythingElseChanging(System.Nullable<bool> value);
    partial void OnAnythingElseChanged();
    #endregion
		
		public HobbyTable()
		{
			this._UserProfile = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile), new Action<UserProfile>(this.detach_UserProfile));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HobbyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HobbyID
		{
			get
			{
				return this._HobbyID;
			}
			set
			{
				if ((this._HobbyID != value))
				{
					this.OnHobbyIDChanging(value);
					this.SendPropertyChanging();
					this._HobbyID = value;
					this.SendPropertyChanged("HobbyID");
					this.OnHobbyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaySports", DbType="Bit")]
		public System.Nullable<bool> PlaySports
		{
			get
			{
				return this._PlaySports;
			}
			set
			{
				if ((this._PlaySports != value))
				{
					this.OnPlaySportsChanging(value);
					this.SendPropertyChanging();
					this._PlaySports = value;
					this.SendPropertyChanged("PlaySports");
					this.OnPlaySportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InAShow", DbType="Bit")]
		public System.Nullable<bool> InAShow
		{
			get
			{
				return this._InAShow;
			}
			set
			{
				if ((this._InAShow != value))
				{
					this.OnInAShowChanging(value);
					this.SendPropertyChanging();
					this._InAShow = value;
					this.SendPropertyChanged("InAShow");
					this.OnInAShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Travel", DbType="Bit")]
		public System.Nullable<bool> Travel
		{
			get
			{
				return this._Travel;
			}
			set
			{
				if ((this._Travel != value))
				{
					this.OnTravelChanging(value);
					this.SendPropertyChanging();
					this._Travel = value;
					this.SendPropertyChanged("Travel");
					this.OnTravelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutdoorPerson", DbType="Bit")]
		public System.Nullable<bool> OutdoorPerson
		{
			get
			{
				return this._OutdoorPerson;
			}
			set
			{
				if ((this._OutdoorPerson != value))
				{
					this.OnOutdoorPersonChanging(value);
					this.SendPropertyChanging();
					this._OutdoorPerson = value;
					this.SendPropertyChanged("OutdoorPerson");
					this.OnOutdoorPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelAbroad", DbType="Bit")]
		public System.Nullable<bool> TravelAbroad
		{
			get
			{
				return this._TravelAbroad;
			}
			set
			{
				if ((this._TravelAbroad != value))
				{
					this.OnTravelAbroadChanging(value);
					this.SendPropertyChanging();
					this._TravelAbroad = value;
					this.SendPropertyChanged("TravelAbroad");
					this.OnTravelAbroadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passions", DbType="Bit")]
		public System.Nullable<bool> Passions
		{
			get
			{
				return this._Passions;
			}
			set
			{
				if ((this._Passions != value))
				{
					this.OnPassionsChanging(value);
					this.SendPropertyChanging();
					this._Passions = value;
					this.SendPropertyChanged("Passions");
					this.OnPassionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Talents", DbType="Bit")]
		public System.Nullable<bool> Talents
		{
			get
			{
				return this._Talents;
			}
			set
			{
				if ((this._Talents != value))
				{
					this.OnTalentsChanging(value);
					this.SendPropertyChanging();
					this._Talents = value;
					this.SendPropertyChanged("Talents");
					this.OnTalentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trophies", DbType="Bit")]
		public System.Nullable<bool> Trophies
		{
			get
			{
				return this._Trophies;
			}
			set
			{
				if ((this._Trophies != value))
				{
					this.OnTrophiesChanging(value);
					this.SendPropertyChanging();
					this._Trophies = value;
					this.SendPropertyChanged("Trophies");
					this.OnTrophiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exercise", DbType="Bit")]
		public System.Nullable<bool> Exercise
		{
			get
			{
				return this._Exercise;
			}
			set
			{
				if ((this._Exercise != value))
				{
					this.OnExerciseChanging(value);
					this.SendPropertyChanging();
					this._Exercise = value;
					this.SendPropertyChanged("Exercise");
					this.OnExerciseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyVacation", DbType="Bit")]
		public System.Nullable<bool> FamilyVacation
		{
			get
			{
				return this._FamilyVacation;
			}
			set
			{
				if ((this._FamilyVacation != value))
				{
					this.OnFamilyVacationChanging(value);
					this.SendPropertyChanging();
					this._FamilyVacation = value;
					this.SendPropertyChanged("FamilyVacation");
					this.OnFamilyVacationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildhoodVacation", DbType="Bit")]
		public System.Nullable<bool> ChildhoodVacation
		{
			get
			{
				return this._ChildhoodVacation;
			}
			set
			{
				if ((this._ChildhoodVacation != value))
				{
					this.OnChildhoodVacationChanging(value);
					this.SendPropertyChanging();
					this._ChildhoodVacation = value;
					this.SendPropertyChanged("ChildhoodVacation");
					this.OnChildhoodVacationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnythingElse", DbType="Bit")]
		public System.Nullable<bool> AnythingElse
		{
			get
			{
				return this._AnythingElse;
			}
			set
			{
				if ((this._AnythingElse != value))
				{
					this.OnAnythingElseChanging(value);
					this.SendPropertyChanging();
					this._AnythingElse = value;
					this.SendPropertyChanged("AnythingElse");
					this.OnAnythingElseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_HobbyTable", Storage="_UserProfile", ThisKey="HobbyID", OtherKey="HobbyID", DeleteRule="NO ACTION")]
		public EntitySet<UserProfile> UserProfile
		{
			get
			{
				return this._UserProfile;
			}
			set
			{
				this._UserProfile.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.HobbyTable = this;
		}
		
		private void detach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.HobbyTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Media")]
	public partial class Media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MediaID;
		
		private string _FilePath;
		
		private System.Nullable<int> _EventID;
		
		private EntityRef<EventTable> _EventTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMediaIDChanging(int value);
    partial void OnMediaIDChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnEventIDChanging(System.Nullable<int> value);
    partial void OnEventIDChanged();
    #endregion
		
		public Media()
		{
			this._EventTable = default(EntityRef<EventTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MediaID
		{
			get
			{
				return this._MediaID;
			}
			set
			{
				if ((this._MediaID != value))
				{
					this.OnMediaIDChanging(value);
					this.SendPropertyChanging();
					this._MediaID = value;
					this.SendPropertyChanged("MediaID");
					this.OnMediaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int")]
		public System.Nullable<int> EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._EventTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Media_EventTable", Storage="_EventTable", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true)]
		public EventTable EventTable
		{
			get
			{
				return this._EventTable.Entity;
			}
			set
			{
				EventTable previousValue = this._EventTable.Entity;
				if (((previousValue != value) 
							|| (this._EventTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EventTable.Entity = null;
						previousValue.Media.Remove(this);
					}
					this._EventTable.Entity = value;
					if ((value != null))
					{
						value.Media.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EventTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Memories")]
	public partial class Memories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemoryID;
		
		private System.Nullable<bool> _BrokenBones;
		
		private System.Nullable<bool> _OwnHome;
		
		private System.Nullable<bool> _DriversLicense;
		
		private System.Nullable<bool> _FirstTooth;
		
		private System.Nullable<bool> _PersonalNickName;
		
		private System.Nullable<bool> _FamilyNickName;
		
		private System.Nullable<bool> _RideBike;
		
		private System.Nullable<bool> _CommitCrime;
		
		private System.Nullable<bool> _BigMove;
		
		private System.Nullable<bool> _Vote;
		
		private System.Nullable<bool> _FamilyTraditions;
		
		private System.Nullable<bool> _EmbarrassingMoment;
		
		private System.Nullable<bool> _ProudestMoments;
		
		private System.Nullable<bool> _ChildhoodCamp;
		
		private System.Nullable<bool> _MemorializeSomeone;
		
		private System.Nullable<bool> _Concerts;
		
		private System.Nullable<bool> _FamilyPet;
		
		private System.Nullable<bool> _CurrentPet;
		
		private System.Nullable<bool> _HSDance;
		
		private System.Nullable<bool> _AnythingElse;
		
		private EntitySet<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemoryIDChanging(int value);
    partial void OnMemoryIDChanged();
    partial void OnBrokenBonesChanging(System.Nullable<bool> value);
    partial void OnBrokenBonesChanged();
    partial void OnOwnHomeChanging(System.Nullable<bool> value);
    partial void OnOwnHomeChanged();
    partial void OnDriversLicenseChanging(System.Nullable<bool> value);
    partial void OnDriversLicenseChanged();
    partial void OnFirstToothChanging(System.Nullable<bool> value);
    partial void OnFirstToothChanged();
    partial void OnPersonalNickNameChanging(System.Nullable<bool> value);
    partial void OnPersonalNickNameChanged();
    partial void OnFamilyNickNameChanging(System.Nullable<bool> value);
    partial void OnFamilyNickNameChanged();
    partial void OnRideBikeChanging(System.Nullable<bool> value);
    partial void OnRideBikeChanged();
    partial void OnCommitCrimeChanging(System.Nullable<bool> value);
    partial void OnCommitCrimeChanged();
    partial void OnBigMoveChanging(System.Nullable<bool> value);
    partial void OnBigMoveChanged();
    partial void OnVoteChanging(System.Nullable<bool> value);
    partial void OnVoteChanged();
    partial void OnFamilyTraditionsChanging(System.Nullable<bool> value);
    partial void OnFamilyTraditionsChanged();
    partial void OnEmbarrassingMomentChanging(System.Nullable<bool> value);
    partial void OnEmbarrassingMomentChanged();
    partial void OnProudestMomentsChanging(System.Nullable<bool> value);
    partial void OnProudestMomentsChanged();
    partial void OnChildhoodCampChanging(System.Nullable<bool> value);
    partial void OnChildhoodCampChanged();
    partial void OnMemorializeSomeoneChanging(System.Nullable<bool> value);
    partial void OnMemorializeSomeoneChanged();
    partial void OnConcertsChanging(System.Nullable<bool> value);
    partial void OnConcertsChanged();
    partial void OnFamilyPetChanging(System.Nullable<bool> value);
    partial void OnFamilyPetChanged();
    partial void OnCurrentPetChanging(System.Nullable<bool> value);
    partial void OnCurrentPetChanged();
    partial void OnHSDanceChanging(System.Nullable<bool> value);
    partial void OnHSDanceChanged();
    partial void OnAnythingElseChanging(System.Nullable<bool> value);
    partial void OnAnythingElseChanged();
    #endregion
		
		public Memories()
		{
			this._UserProfile = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile), new Action<UserProfile>(this.detach_UserProfile));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemoryID
		{
			get
			{
				return this._MemoryID;
			}
			set
			{
				if ((this._MemoryID != value))
				{
					this.OnMemoryIDChanging(value);
					this.SendPropertyChanging();
					this._MemoryID = value;
					this.SendPropertyChanged("MemoryID");
					this.OnMemoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokenBones", DbType="Bit")]
		public System.Nullable<bool> BrokenBones
		{
			get
			{
				return this._BrokenBones;
			}
			set
			{
				if ((this._BrokenBones != value))
				{
					this.OnBrokenBonesChanging(value);
					this.SendPropertyChanging();
					this._BrokenBones = value;
					this.SendPropertyChanged("BrokenBones");
					this.OnBrokenBonesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnHome", DbType="Bit")]
		public System.Nullable<bool> OwnHome
		{
			get
			{
				return this._OwnHome;
			}
			set
			{
				if ((this._OwnHome != value))
				{
					this.OnOwnHomeChanging(value);
					this.SendPropertyChanging();
					this._OwnHome = value;
					this.SendPropertyChanged("OwnHome");
					this.OnOwnHomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriversLicense", DbType="Bit")]
		public System.Nullable<bool> DriversLicense
		{
			get
			{
				return this._DriversLicense;
			}
			set
			{
				if ((this._DriversLicense != value))
				{
					this.OnDriversLicenseChanging(value);
					this.SendPropertyChanging();
					this._DriversLicense = value;
					this.SendPropertyChanged("DriversLicense");
					this.OnDriversLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstTooth", DbType="Bit")]
		public System.Nullable<bool> FirstTooth
		{
			get
			{
				return this._FirstTooth;
			}
			set
			{
				if ((this._FirstTooth != value))
				{
					this.OnFirstToothChanging(value);
					this.SendPropertyChanging();
					this._FirstTooth = value;
					this.SendPropertyChanged("FirstTooth");
					this.OnFirstToothChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNickName", DbType="Bit")]
		public System.Nullable<bool> PersonalNickName
		{
			get
			{
				return this._PersonalNickName;
			}
			set
			{
				if ((this._PersonalNickName != value))
				{
					this.OnPersonalNickNameChanging(value);
					this.SendPropertyChanging();
					this._PersonalNickName = value;
					this.SendPropertyChanged("PersonalNickName");
					this.OnPersonalNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNickName", DbType="Bit")]
		public System.Nullable<bool> FamilyNickName
		{
			get
			{
				return this._FamilyNickName;
			}
			set
			{
				if ((this._FamilyNickName != value))
				{
					this.OnFamilyNickNameChanging(value);
					this.SendPropertyChanging();
					this._FamilyNickName = value;
					this.SendPropertyChanged("FamilyNickName");
					this.OnFamilyNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RideBike", DbType="Bit")]
		public System.Nullable<bool> RideBike
		{
			get
			{
				return this._RideBike;
			}
			set
			{
				if ((this._RideBike != value))
				{
					this.OnRideBikeChanging(value);
					this.SendPropertyChanging();
					this._RideBike = value;
					this.SendPropertyChanged("RideBike");
					this.OnRideBikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommitCrime", DbType="Bit")]
		public System.Nullable<bool> CommitCrime
		{
			get
			{
				return this._CommitCrime;
			}
			set
			{
				if ((this._CommitCrime != value))
				{
					this.OnCommitCrimeChanging(value);
					this.SendPropertyChanging();
					this._CommitCrime = value;
					this.SendPropertyChanged("CommitCrime");
					this.OnCommitCrimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigMove", DbType="Bit")]
		public System.Nullable<bool> BigMove
		{
			get
			{
				return this._BigMove;
			}
			set
			{
				if ((this._BigMove != value))
				{
					this.OnBigMoveChanging(value);
					this.SendPropertyChanging();
					this._BigMove = value;
					this.SendPropertyChanged("BigMove");
					this.OnBigMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vote", DbType="Bit")]
		public System.Nullable<bool> Vote
		{
			get
			{
				return this._Vote;
			}
			set
			{
				if ((this._Vote != value))
				{
					this.OnVoteChanging(value);
					this.SendPropertyChanging();
					this._Vote = value;
					this.SendPropertyChanged("Vote");
					this.OnVoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyTraditions", DbType="Bit")]
		public System.Nullable<bool> FamilyTraditions
		{
			get
			{
				return this._FamilyTraditions;
			}
			set
			{
				if ((this._FamilyTraditions != value))
				{
					this.OnFamilyTraditionsChanging(value);
					this.SendPropertyChanging();
					this._FamilyTraditions = value;
					this.SendPropertyChanged("FamilyTraditions");
					this.OnFamilyTraditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmbarrassingMoment", DbType="Bit")]
		public System.Nullable<bool> EmbarrassingMoment
		{
			get
			{
				return this._EmbarrassingMoment;
			}
			set
			{
				if ((this._EmbarrassingMoment != value))
				{
					this.OnEmbarrassingMomentChanging(value);
					this.SendPropertyChanging();
					this._EmbarrassingMoment = value;
					this.SendPropertyChanged("EmbarrassingMoment");
					this.OnEmbarrassingMomentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProudestMoments", DbType="Bit")]
		public System.Nullable<bool> ProudestMoments
		{
			get
			{
				return this._ProudestMoments;
			}
			set
			{
				if ((this._ProudestMoments != value))
				{
					this.OnProudestMomentsChanging(value);
					this.SendPropertyChanging();
					this._ProudestMoments = value;
					this.SendPropertyChanged("ProudestMoments");
					this.OnProudestMomentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildhoodCamp", DbType="Bit")]
		public System.Nullable<bool> ChildhoodCamp
		{
			get
			{
				return this._ChildhoodCamp;
			}
			set
			{
				if ((this._ChildhoodCamp != value))
				{
					this.OnChildhoodCampChanging(value);
					this.SendPropertyChanging();
					this._ChildhoodCamp = value;
					this.SendPropertyChanged("ChildhoodCamp");
					this.OnChildhoodCampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemorializeSomeone", DbType="Bit")]
		public System.Nullable<bool> MemorializeSomeone
		{
			get
			{
				return this._MemorializeSomeone;
			}
			set
			{
				if ((this._MemorializeSomeone != value))
				{
					this.OnMemorializeSomeoneChanging(value);
					this.SendPropertyChanging();
					this._MemorializeSomeone = value;
					this.SendPropertyChanged("MemorializeSomeone");
					this.OnMemorializeSomeoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concerts", DbType="Bit")]
		public System.Nullable<bool> Concerts
		{
			get
			{
				return this._Concerts;
			}
			set
			{
				if ((this._Concerts != value))
				{
					this.OnConcertsChanging(value);
					this.SendPropertyChanging();
					this._Concerts = value;
					this.SendPropertyChanged("Concerts");
					this.OnConcertsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyPet", DbType="Bit")]
		public System.Nullable<bool> FamilyPet
		{
			get
			{
				return this._FamilyPet;
			}
			set
			{
				if ((this._FamilyPet != value))
				{
					this.OnFamilyPetChanging(value);
					this.SendPropertyChanging();
					this._FamilyPet = value;
					this.SendPropertyChanged("FamilyPet");
					this.OnFamilyPetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPet", DbType="Bit")]
		public System.Nullable<bool> CurrentPet
		{
			get
			{
				return this._CurrentPet;
			}
			set
			{
				if ((this._CurrentPet != value))
				{
					this.OnCurrentPetChanging(value);
					this.SendPropertyChanging();
					this._CurrentPet = value;
					this.SendPropertyChanged("CurrentPet");
					this.OnCurrentPetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSDance", DbType="Bit")]
		public System.Nullable<bool> HSDance
		{
			get
			{
				return this._HSDance;
			}
			set
			{
				if ((this._HSDance != value))
				{
					this.OnHSDanceChanging(value);
					this.SendPropertyChanging();
					this._HSDance = value;
					this.SendPropertyChanged("HSDance");
					this.OnHSDanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnythingElse", DbType="Bit")]
		public System.Nullable<bool> AnythingElse
		{
			get
			{
				return this._AnythingElse;
			}
			set
			{
				if ((this._AnythingElse != value))
				{
					this.OnAnythingElseChanging(value);
					this.SendPropertyChanging();
					this._AnythingElse = value;
					this.SendPropertyChanged("AnythingElse");
					this.OnAnythingElseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_Memories", Storage="_UserProfile", ThisKey="MemoryID", OtherKey="MemoryID", DeleteRule="NO ACTION")]
		public EntitySet<UserProfile> UserProfile
		{
			get
			{
				return this._UserProfile;
			}
			set
			{
				this._UserProfile.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Memories = this;
		}
		
		private void detach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Memories = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegisterUser")]
	public partial class RegisterUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegisterUserID;
		
		private int _LoginID;
		
		private int _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegisterUserIDChanging(int value);
    partial void OnRegisterUserIDChanged();
    partial void OnLoginIDChanging(int value);
    partial void OnLoginIDChanged();
    partial void OnEmailChanging(int value);
    partial void OnEmailChanged();
    #endregion
		
		public RegisterUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RegisterUserID
		{
			get
			{
				return this._RegisterUserID;
			}
			set
			{
				if ((this._RegisterUserID != value))
				{
					this.OnRegisterUserIDChanging(value);
					this.SendPropertyChanging();
					this._RegisterUserID = value;
					this.SendPropertyChanged("RegisterUserID");
					this.OnRegisterUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="Int NOT NULL")]
		public int LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Int NOT NULL")]
		public int Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relationship")]
	public partial class Relationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelationshipsID;
		
		private System.Nullable<bool> _CurrentlyMarried;
		
		private System.Nullable<bool> _InARelationship;
		
		private System.Nullable<bool> _PreviousRomance;
		
		private System.Nullable<bool> _HaveChildren;
		
		private System.Nullable<bool> _HaveGrandchildren;
		
		private System.Nullable<bool> _OtherYoungsters;
		
		private System.Nullable<bool> _HaveParents;
		
		private System.Nullable<bool> _HaveGrandparents;
		
		private System.Nullable<bool> _OtherAdults;
		
		private System.Nullable<bool> _HaveSiblings;
		
		private System.Nullable<bool> _OtherCloseRelatives;
		
		private System.Nullable<bool> _GoodFriendships;
		
		private System.Nullable<bool> _EverythingElse;
		
		private EntitySet<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelationshipsIDChanging(int value);
    partial void OnRelationshipsIDChanged();
    partial void OnCurrentlyMarriedChanging(System.Nullable<bool> value);
    partial void OnCurrentlyMarriedChanged();
    partial void OnInARelationshipChanging(System.Nullable<bool> value);
    partial void OnInARelationshipChanged();
    partial void OnPreviousRomanceChanging(System.Nullable<bool> value);
    partial void OnPreviousRomanceChanged();
    partial void OnHaveChildrenChanging(System.Nullable<bool> value);
    partial void OnHaveChildrenChanged();
    partial void OnHaveGrandchildrenChanging(System.Nullable<bool> value);
    partial void OnHaveGrandchildrenChanged();
    partial void OnOtherYoungstersChanging(System.Nullable<bool> value);
    partial void OnOtherYoungstersChanged();
    partial void OnHaveParentsChanging(System.Nullable<bool> value);
    partial void OnHaveParentsChanged();
    partial void OnHaveGrandparentsChanging(System.Nullable<bool> value);
    partial void OnHaveGrandparentsChanged();
    partial void OnOtherAdultsChanging(System.Nullable<bool> value);
    partial void OnOtherAdultsChanged();
    partial void OnHaveSiblingsChanging(System.Nullable<bool> value);
    partial void OnHaveSiblingsChanged();
    partial void OnOtherCloseRelativesChanging(System.Nullable<bool> value);
    partial void OnOtherCloseRelativesChanged();
    partial void OnGoodFriendshipsChanging(System.Nullable<bool> value);
    partial void OnGoodFriendshipsChanged();
    partial void OnEverythingElseChanging(System.Nullable<bool> value);
    partial void OnEverythingElseChanged();
    #endregion
		
		public Relationship()
		{
			this._UserProfile = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile), new Action<UserProfile>(this.detach_UserProfile));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RelationshipsID
		{
			get
			{
				return this._RelationshipsID;
			}
			set
			{
				if ((this._RelationshipsID != value))
				{
					this.OnRelationshipsIDChanging(value);
					this.SendPropertyChanging();
					this._RelationshipsID = value;
					this.SendPropertyChanged("RelationshipsID");
					this.OnRelationshipsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentlyMarried", DbType="Bit")]
		public System.Nullable<bool> CurrentlyMarried
		{
			get
			{
				return this._CurrentlyMarried;
			}
			set
			{
				if ((this._CurrentlyMarried != value))
				{
					this.OnCurrentlyMarriedChanging(value);
					this.SendPropertyChanging();
					this._CurrentlyMarried = value;
					this.SendPropertyChanged("CurrentlyMarried");
					this.OnCurrentlyMarriedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InARelationship", DbType="Bit")]
		public System.Nullable<bool> InARelationship
		{
			get
			{
				return this._InARelationship;
			}
			set
			{
				if ((this._InARelationship != value))
				{
					this.OnInARelationshipChanging(value);
					this.SendPropertyChanging();
					this._InARelationship = value;
					this.SendPropertyChanged("InARelationship");
					this.OnInARelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousRomance", DbType="Bit")]
		public System.Nullable<bool> PreviousRomance
		{
			get
			{
				return this._PreviousRomance;
			}
			set
			{
				if ((this._PreviousRomance != value))
				{
					this.OnPreviousRomanceChanging(value);
					this.SendPropertyChanging();
					this._PreviousRomance = value;
					this.SendPropertyChanged("PreviousRomance");
					this.OnPreviousRomanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaveChildren", DbType="Bit")]
		public System.Nullable<bool> HaveChildren
		{
			get
			{
				return this._HaveChildren;
			}
			set
			{
				if ((this._HaveChildren != value))
				{
					this.OnHaveChildrenChanging(value);
					this.SendPropertyChanging();
					this._HaveChildren = value;
					this.SendPropertyChanged("HaveChildren");
					this.OnHaveChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaveGrandchildren", DbType="Bit")]
		public System.Nullable<bool> HaveGrandchildren
		{
			get
			{
				return this._HaveGrandchildren;
			}
			set
			{
				if ((this._HaveGrandchildren != value))
				{
					this.OnHaveGrandchildrenChanging(value);
					this.SendPropertyChanging();
					this._HaveGrandchildren = value;
					this.SendPropertyChanged("HaveGrandchildren");
					this.OnHaveGrandchildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherYoungsters", DbType="Bit")]
		public System.Nullable<bool> OtherYoungsters
		{
			get
			{
				return this._OtherYoungsters;
			}
			set
			{
				if ((this._OtherYoungsters != value))
				{
					this.OnOtherYoungstersChanging(value);
					this.SendPropertyChanging();
					this._OtherYoungsters = value;
					this.SendPropertyChanged("OtherYoungsters");
					this.OnOtherYoungstersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaveParents", DbType="Bit")]
		public System.Nullable<bool> HaveParents
		{
			get
			{
				return this._HaveParents;
			}
			set
			{
				if ((this._HaveParents != value))
				{
					this.OnHaveParentsChanging(value);
					this.SendPropertyChanging();
					this._HaveParents = value;
					this.SendPropertyChanged("HaveParents");
					this.OnHaveParentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaveGrandparents", DbType="Bit")]
		public System.Nullable<bool> HaveGrandparents
		{
			get
			{
				return this._HaveGrandparents;
			}
			set
			{
				if ((this._HaveGrandparents != value))
				{
					this.OnHaveGrandparentsChanging(value);
					this.SendPropertyChanging();
					this._HaveGrandparents = value;
					this.SendPropertyChanged("HaveGrandparents");
					this.OnHaveGrandparentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherAdults", DbType="Bit")]
		public System.Nullable<bool> OtherAdults
		{
			get
			{
				return this._OtherAdults;
			}
			set
			{
				if ((this._OtherAdults != value))
				{
					this.OnOtherAdultsChanging(value);
					this.SendPropertyChanging();
					this._OtherAdults = value;
					this.SendPropertyChanged("OtherAdults");
					this.OnOtherAdultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaveSiblings", DbType="Bit")]
		public System.Nullable<bool> HaveSiblings
		{
			get
			{
				return this._HaveSiblings;
			}
			set
			{
				if ((this._HaveSiblings != value))
				{
					this.OnHaveSiblingsChanging(value);
					this.SendPropertyChanging();
					this._HaveSiblings = value;
					this.SendPropertyChanged("HaveSiblings");
					this.OnHaveSiblingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCloseRelatives", DbType="Bit")]
		public System.Nullable<bool> OtherCloseRelatives
		{
			get
			{
				return this._OtherCloseRelatives;
			}
			set
			{
				if ((this._OtherCloseRelatives != value))
				{
					this.OnOtherCloseRelativesChanging(value);
					this.SendPropertyChanging();
					this._OtherCloseRelatives = value;
					this.SendPropertyChanged("OtherCloseRelatives");
					this.OnOtherCloseRelativesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodFriendships", DbType="Bit")]
		public System.Nullable<bool> GoodFriendships
		{
			get
			{
				return this._GoodFriendships;
			}
			set
			{
				if ((this._GoodFriendships != value))
				{
					this.OnGoodFriendshipsChanging(value);
					this.SendPropertyChanging();
					this._GoodFriendships = value;
					this.SendPropertyChanged("GoodFriendships");
					this.OnGoodFriendshipsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EverythingElse", DbType="Bit")]
		public System.Nullable<bool> EverythingElse
		{
			get
			{
				return this._EverythingElse;
			}
			set
			{
				if ((this._EverythingElse != value))
				{
					this.OnEverythingElseChanging(value);
					this.SendPropertyChanging();
					this._EverythingElse = value;
					this.SendPropertyChanged("EverythingElse");
					this.OnEverythingElseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_Relationship", Storage="_UserProfile", ThisKey="RelationshipsID", OtherKey="RelationshipsID", DeleteRule="NO ACTION")]
		public EntitySet<UserProfile> UserProfile
		{
			get
			{
				return this._UserProfile;
			}
			set
			{
				this._UserProfile.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = this;
		}
		
		private void detach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Relationship = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserProfileID;
		
		private System.DateTime _Birthdate;
		
		private int _RelationshipsID;
		
		private int _CareerID;
		
		private int _CelebrationID;
		
		private int _HobbyID;
		
		private int _MemoryID;
		
		private int _WorldEventID;
		
		private int _EventID;
		
		private EntityRef<Career> _Career;
		
		private EntityRef<Celebration> _Celebration;
		
		private EntityRef<EventTable> _EventTable;
		
		private EntityRef<HobbyTable> _HobbyTable;
		
		private EntityRef<Memories> _Memories;
		
		private EntityRef<Relationship> _Relationship;
		
		private EntityRef<WorldEvents> _WorldEvents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserProfileIDChanging(int value);
    partial void OnUserProfileIDChanged();
    partial void OnBirthdateChanging(System.DateTime value);
    partial void OnBirthdateChanged();
    partial void OnRelationshipsIDChanging(int value);
    partial void OnRelationshipsIDChanged();
    partial void OnCareerIDChanging(int value);
    partial void OnCareerIDChanged();
    partial void OnCelebrationIDChanging(int value);
    partial void OnCelebrationIDChanged();
    partial void OnHobbyIDChanging(int value);
    partial void OnHobbyIDChanged();
    partial void OnMemoryIDChanging(int value);
    partial void OnMemoryIDChanged();
    partial void OnWorldEventIDChanging(int value);
    partial void OnWorldEventIDChanged();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    #endregion
		
		public UserProfile()
		{
			this._Career = default(EntityRef<Career>);
			this._Celebration = default(EntityRef<Celebration>);
			this._EventTable = default(EntityRef<EventTable>);
			this._HobbyTable = default(EntityRef<HobbyTable>);
			this._Memories = default(EntityRef<Memories>);
			this._Relationship = default(EntityRef<Relationship>);
			this._WorldEvents = default(EntityRef<WorldEvents>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserProfileID
		{
			get
			{
				return this._UserProfileID;
			}
			set
			{
				if ((this._UserProfileID != value))
				{
					this.OnUserProfileIDChanging(value);
					this.SendPropertyChanging();
					this._UserProfileID = value;
					this.SendPropertyChanged("UserProfileID");
					this.OnUserProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="DateTime NOT NULL")]
		public System.DateTime Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipsID", DbType="Int NOT NULL")]
		public int RelationshipsID
		{
			get
			{
				return this._RelationshipsID;
			}
			set
			{
				if ((this._RelationshipsID != value))
				{
					if (this._Relationship.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelationshipsIDChanging(value);
					this.SendPropertyChanging();
					this._RelationshipsID = value;
					this.SendPropertyChanged("RelationshipsID");
					this.OnRelationshipsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CareerID", DbType="Int NOT NULL")]
		public int CareerID
		{
			get
			{
				return this._CareerID;
			}
			set
			{
				if ((this._CareerID != value))
				{
					if (this._Career.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCareerIDChanging(value);
					this.SendPropertyChanging();
					this._CareerID = value;
					this.SendPropertyChanged("CareerID");
					this.OnCareerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelebrationID", DbType="Int NOT NULL")]
		public int CelebrationID
		{
			get
			{
				return this._CelebrationID;
			}
			set
			{
				if ((this._CelebrationID != value))
				{
					if (this._Celebration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCelebrationIDChanging(value);
					this.SendPropertyChanging();
					this._CelebrationID = value;
					this.SendPropertyChanged("CelebrationID");
					this.OnCelebrationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HobbyID", DbType="Int NOT NULL")]
		public int HobbyID
		{
			get
			{
				return this._HobbyID;
			}
			set
			{
				if ((this._HobbyID != value))
				{
					if (this._HobbyTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHobbyIDChanging(value);
					this.SendPropertyChanging();
					this._HobbyID = value;
					this.SendPropertyChanged("HobbyID");
					this.OnHobbyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemoryID", DbType="Int NOT NULL")]
		public int MemoryID
		{
			get
			{
				return this._MemoryID;
			}
			set
			{
				if ((this._MemoryID != value))
				{
					if (this._Memories.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemoryIDChanging(value);
					this.SendPropertyChanging();
					this._MemoryID = value;
					this.SendPropertyChanged("MemoryID");
					this.OnMemoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorldEventID", DbType="Int NOT NULL")]
		public int WorldEventID
		{
			get
			{
				return this._WorldEventID;
			}
			set
			{
				if ((this._WorldEventID != value))
				{
					if (this._WorldEvents.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorldEventIDChanging(value);
					this.SendPropertyChanging();
					this._WorldEventID = value;
					this.SendPropertyChanged("WorldEventID");
					this.OnWorldEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._EventTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_Career", Storage="_Career", ThisKey="CareerID", OtherKey="CareerID", IsForeignKey=true)]
		public Career Career
		{
			get
			{
				return this._Career.Entity;
			}
			set
			{
				Career previousValue = this._Career.Entity;
				if (((previousValue != value) 
							|| (this._Career.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Career.Entity = null;
						previousValue.UserProfile.Remove(this);
					}
					this._Career.Entity = value;
					if ((value != null))
					{
						value.UserProfile.Add(this);
						this._CareerID = value.CareerID;
					}
					else
					{
						this._CareerID = default(int);
					}
					this.SendPropertyChanged("Career");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_Celebration", Storage="_Celebration", ThisKey="CelebrationID", OtherKey="CelebrationID", IsForeignKey=true)]
		public Celebration Celebration
		{
			get
			{
				return this._Celebration.Entity;
			}
			set
			{
				Celebration previousValue = this._Celebration.Entity;
				if (((previousValue != value) 
							|| (this._Celebration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Celebration.Entity = null;
						previousValue.UserProfile.Remove(this);
					}
					this._Celebration.Entity = value;
					if ((value != null))
					{
						value.UserProfile.Add(this);
						this._CelebrationID = value.CelebrationID;
					}
					else
					{
						this._CelebrationID = default(int);
					}
					this.SendPropertyChanged("Celebration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_EventTable", Storage="_EventTable", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true)]
		public EventTable EventTable
		{
			get
			{
				return this._EventTable.Entity;
			}
			set
			{
				EventTable previousValue = this._EventTable.Entity;
				if (((previousValue != value) 
							|| (this._EventTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EventTable.Entity = null;
						previousValue.UserProfile.Remove(this);
					}
					this._EventTable.Entity = value;
					if ((value != null))
					{
						value.UserProfile.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(int);
					}
					this.SendPropertyChanged("EventTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_HobbyTable", Storage="_HobbyTable", ThisKey="HobbyID", OtherKey="HobbyID", IsForeignKey=true)]
		public HobbyTable HobbyTable
		{
			get
			{
				return this._HobbyTable.Entity;
			}
			set
			{
				HobbyTable previousValue = this._HobbyTable.Entity;
				if (((previousValue != value) 
							|| (this._HobbyTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HobbyTable.Entity = null;
						previousValue.UserProfile.Remove(this);
					}
					this._HobbyTable.Entity = value;
					if ((value != null))
					{
						value.UserProfile.Add(this);
						this._HobbyID = value.HobbyID;
					}
					else
					{
						this._HobbyID = default(int);
					}
					this.SendPropertyChanged("HobbyTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_Memories", Storage="_Memories", ThisKey="MemoryID", OtherKey="MemoryID", IsForeignKey=true)]
		public Memories Memories
		{
			get
			{
				return this._Memories.Entity;
			}
			set
			{
				Memories previousValue = this._Memories.Entity;
				if (((previousValue != value) 
							|| (this._Memories.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Memories.Entity = null;
						previousValue.UserProfile.Remove(this);
					}
					this._Memories.Entity = value;
					if ((value != null))
					{
						value.UserProfile.Add(this);
						this._MemoryID = value.MemoryID;
					}
					else
					{
						this._MemoryID = default(int);
					}
					this.SendPropertyChanged("Memories");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_Relationship", Storage="_Relationship", ThisKey="RelationshipsID", OtherKey="RelationshipsID", IsForeignKey=true)]
		public Relationship Relationship
		{
			get
			{
				return this._Relationship.Entity;
			}
			set
			{
				Relationship previousValue = this._Relationship.Entity;
				if (((previousValue != value) 
							|| (this._Relationship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relationship.Entity = null;
						previousValue.UserProfile.Remove(this);
					}
					this._Relationship.Entity = value;
					if ((value != null))
					{
						value.UserProfile.Add(this);
						this._RelationshipsID = value.RelationshipsID;
					}
					else
					{
						this._RelationshipsID = default(int);
					}
					this.SendPropertyChanged("Relationship");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_WorldEvents", Storage="_WorldEvents", ThisKey="WorldEventID", OtherKey="WorldEventID", IsForeignKey=true)]
		public WorldEvents WorldEvents
		{
			get
			{
				return this._WorldEvents.Entity;
			}
			set
			{
				WorldEvents previousValue = this._WorldEvents.Entity;
				if (((previousValue != value) 
							|| (this._WorldEvents.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorldEvents.Entity = null;
						previousValue.UserProfile.Remove(this);
					}
					this._WorldEvents.Entity = value;
					if ((value != null))
					{
						value.UserProfile.Add(this);
						this._WorldEventID = value.WorldEventID;
					}
					else
					{
						this._WorldEventID = default(int);
					}
					this.SendPropertyChanged("WorldEvents");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorldEvents")]
	public partial class WorldEvents : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorldEventID;
		
		private System.Nullable<bool> _September11;
		
		private System.Nullable<bool> _MoonLanding;
		
		private System.Nullable<bool> _NixonResigns;
		
		private System.Nullable<bool> _ElvisDies;
		
		private System.Nullable<bool> _ChallengerExplodes;
		
		private System.Nullable<bool> _WorldWar2Ends;
		
		private System.Nullable<bool> _KennedyDies;
		
		private System.Nullable<bool> _NotableElection;
		
		private System.Nullable<bool> _MLKAssassination;
		
		private System.Nullable<bool> _Y2K;
		
		private System.Nullable<bool> _BerlinWall;
		
		private System.Nullable<bool> _OJSimpsonCarChase;
		
		private System.Nullable<bool> _EndOfProhibition;
		
		private System.Nullable<bool> _VietnamWar;
		
		private System.Nullable<bool> _AnythingElse;
		
		private EntitySet<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorldEventIDChanging(int value);
    partial void OnWorldEventIDChanged();
    partial void OnSeptember11Changing(System.Nullable<bool> value);
    partial void OnSeptember11Changed();
    partial void OnMoonLandingChanging(System.Nullable<bool> value);
    partial void OnMoonLandingChanged();
    partial void OnNixonResignsChanging(System.Nullable<bool> value);
    partial void OnNixonResignsChanged();
    partial void OnElvisDiesChanging(System.Nullable<bool> value);
    partial void OnElvisDiesChanged();
    partial void OnChallengerExplodesChanging(System.Nullable<bool> value);
    partial void OnChallengerExplodesChanged();
    partial void OnWorldWar2EndsChanging(System.Nullable<bool> value);
    partial void OnWorldWar2EndsChanged();
    partial void OnKennedyDiesChanging(System.Nullable<bool> value);
    partial void OnKennedyDiesChanged();
    partial void OnNotableElectionChanging(System.Nullable<bool> value);
    partial void OnNotableElectionChanged();
    partial void OnMLKAssassinationChanging(System.Nullable<bool> value);
    partial void OnMLKAssassinationChanged();
    partial void OnY2KChanging(System.Nullable<bool> value);
    partial void OnY2KChanged();
    partial void OnBerlinWallChanging(System.Nullable<bool> value);
    partial void OnBerlinWallChanged();
    partial void OnOJSimpsonCarChaseChanging(System.Nullable<bool> value);
    partial void OnOJSimpsonCarChaseChanged();
    partial void OnEndOfProhibitionChanging(System.Nullable<bool> value);
    partial void OnEndOfProhibitionChanged();
    partial void OnVietnamWarChanging(System.Nullable<bool> value);
    partial void OnVietnamWarChanged();
    partial void OnAnythingElseChanging(System.Nullable<bool> value);
    partial void OnAnythingElseChanged();
    #endregion
		
		public WorldEvents()
		{
			this._UserProfile = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile), new Action<UserProfile>(this.detach_UserProfile));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorldEventID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorldEventID
		{
			get
			{
				return this._WorldEventID;
			}
			set
			{
				if ((this._WorldEventID != value))
				{
					this.OnWorldEventIDChanging(value);
					this.SendPropertyChanging();
					this._WorldEventID = value;
					this.SendPropertyChanged("WorldEventID");
					this.OnWorldEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_September11", DbType="Bit")]
		public System.Nullable<bool> September11
		{
			get
			{
				return this._September11;
			}
			set
			{
				if ((this._September11 != value))
				{
					this.OnSeptember11Changing(value);
					this.SendPropertyChanging();
					this._September11 = value;
					this.SendPropertyChanged("September11");
					this.OnSeptember11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoonLanding", DbType="Bit")]
		public System.Nullable<bool> MoonLanding
		{
			get
			{
				return this._MoonLanding;
			}
			set
			{
				if ((this._MoonLanding != value))
				{
					this.OnMoonLandingChanging(value);
					this.SendPropertyChanging();
					this._MoonLanding = value;
					this.SendPropertyChanged("MoonLanding");
					this.OnMoonLandingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NixonResigns", DbType="Bit")]
		public System.Nullable<bool> NixonResigns
		{
			get
			{
				return this._NixonResigns;
			}
			set
			{
				if ((this._NixonResigns != value))
				{
					this.OnNixonResignsChanging(value);
					this.SendPropertyChanging();
					this._NixonResigns = value;
					this.SendPropertyChanged("NixonResigns");
					this.OnNixonResignsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElvisDies", DbType="Bit")]
		public System.Nullable<bool> ElvisDies
		{
			get
			{
				return this._ElvisDies;
			}
			set
			{
				if ((this._ElvisDies != value))
				{
					this.OnElvisDiesChanging(value);
					this.SendPropertyChanging();
					this._ElvisDies = value;
					this.SendPropertyChanged("ElvisDies");
					this.OnElvisDiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChallengerExplodes", DbType="Bit")]
		public System.Nullable<bool> ChallengerExplodes
		{
			get
			{
				return this._ChallengerExplodes;
			}
			set
			{
				if ((this._ChallengerExplodes != value))
				{
					this.OnChallengerExplodesChanging(value);
					this.SendPropertyChanging();
					this._ChallengerExplodes = value;
					this.SendPropertyChanged("ChallengerExplodes");
					this.OnChallengerExplodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorldWar2Ends", DbType="Bit")]
		public System.Nullable<bool> WorldWar2Ends
		{
			get
			{
				return this._WorldWar2Ends;
			}
			set
			{
				if ((this._WorldWar2Ends != value))
				{
					this.OnWorldWar2EndsChanging(value);
					this.SendPropertyChanging();
					this._WorldWar2Ends = value;
					this.SendPropertyChanged("WorldWar2Ends");
					this.OnWorldWar2EndsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KennedyDies", DbType="Bit")]
		public System.Nullable<bool> KennedyDies
		{
			get
			{
				return this._KennedyDies;
			}
			set
			{
				if ((this._KennedyDies != value))
				{
					this.OnKennedyDiesChanging(value);
					this.SendPropertyChanging();
					this._KennedyDies = value;
					this.SendPropertyChanged("KennedyDies");
					this.OnKennedyDiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotableElection", DbType="Bit")]
		public System.Nullable<bool> NotableElection
		{
			get
			{
				return this._NotableElection;
			}
			set
			{
				if ((this._NotableElection != value))
				{
					this.OnNotableElectionChanging(value);
					this.SendPropertyChanging();
					this._NotableElection = value;
					this.SendPropertyChanged("NotableElection");
					this.OnNotableElectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLKAssassination", DbType="Bit")]
		public System.Nullable<bool> MLKAssassination
		{
			get
			{
				return this._MLKAssassination;
			}
			set
			{
				if ((this._MLKAssassination != value))
				{
					this.OnMLKAssassinationChanging(value);
					this.SendPropertyChanging();
					this._MLKAssassination = value;
					this.SendPropertyChanged("MLKAssassination");
					this.OnMLKAssassinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y2K", DbType="Bit")]
		public System.Nullable<bool> Y2K
		{
			get
			{
				return this._Y2K;
			}
			set
			{
				if ((this._Y2K != value))
				{
					this.OnY2KChanging(value);
					this.SendPropertyChanging();
					this._Y2K = value;
					this.SendPropertyChanged("Y2K");
					this.OnY2KChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BerlinWall", DbType="Bit")]
		public System.Nullable<bool> BerlinWall
		{
			get
			{
				return this._BerlinWall;
			}
			set
			{
				if ((this._BerlinWall != value))
				{
					this.OnBerlinWallChanging(value);
					this.SendPropertyChanging();
					this._BerlinWall = value;
					this.SendPropertyChanged("BerlinWall");
					this.OnBerlinWallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OJSimpsonCarChase", DbType="Bit")]
		public System.Nullable<bool> OJSimpsonCarChase
		{
			get
			{
				return this._OJSimpsonCarChase;
			}
			set
			{
				if ((this._OJSimpsonCarChase != value))
				{
					this.OnOJSimpsonCarChaseChanging(value);
					this.SendPropertyChanging();
					this._OJSimpsonCarChase = value;
					this.SendPropertyChanged("OJSimpsonCarChase");
					this.OnOJSimpsonCarChaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOfProhibition", DbType="Bit")]
		public System.Nullable<bool> EndOfProhibition
		{
			get
			{
				return this._EndOfProhibition;
			}
			set
			{
				if ((this._EndOfProhibition != value))
				{
					this.OnEndOfProhibitionChanging(value);
					this.SendPropertyChanging();
					this._EndOfProhibition = value;
					this.SendPropertyChanged("EndOfProhibition");
					this.OnEndOfProhibitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VietnamWar", DbType="Bit")]
		public System.Nullable<bool> VietnamWar
		{
			get
			{
				return this._VietnamWar;
			}
			set
			{
				if ((this._VietnamWar != value))
				{
					this.OnVietnamWarChanging(value);
					this.SendPropertyChanging();
					this._VietnamWar = value;
					this.SendPropertyChanged("VietnamWar");
					this.OnVietnamWarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnythingElse", DbType="Bit")]
		public System.Nullable<bool> AnythingElse
		{
			get
			{
				return this._AnythingElse;
			}
			set
			{
				if ((this._AnythingElse != value))
				{
					this.OnAnythingElseChanging(value);
					this.SendPropertyChanging();
					this._AnythingElse = value;
					this.SendPropertyChanged("AnythingElse");
					this.OnAnythingElseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_UserProfile_WorldEvents", Storage="_UserProfile", ThisKey="WorldEventID", OtherKey="WorldEventID", DeleteRule="NO ACTION")]
		public EntitySet<UserProfile> UserProfile
		{
			get
			{
				return this._UserProfile;
			}
			set
			{
				this._UserProfile.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.WorldEvents = this;
		}
		
		private void detach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.WorldEvents = null;
		}
	}
}
#pragma warning restore 1591
